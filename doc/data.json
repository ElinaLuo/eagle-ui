{
    "project": {
        "name": "eagle-ui",
        "description": "<h3>欢迎使用eagle-ui，左侧的导航栏为相关react组件的名称和链接</h3><p>&nbsp;</p><h4>您可以点击顶部导航栏的<strong><a href=\"/documents/eagle-ui/examples/\">示例</a></strong>，查看eagle-ui组件的UI效果及功能演示</h4><p>&nbsp;</p><h4>您可以通过如下方式查看组件的API</h4><ol><li><h4>在输入框中输入组件名字进行查询</h4></li><li><h4>点击左侧API导航栏</h4></li></ol><strong>说明:</strong>左侧导航栏中对应的链接名字即为组件名字<p>&nbsp;</p><h4>您可以采用如下形式在项目中应用eagle-ui</h4><pre>import {CheckboxGroup}(根据您的需要引入组件) from 'eagle-ui'使用相关组件</pre>或者<pre><div>&#60;script src=\"path to eagle-ui.js\" &#62;&#60;/script&#62;的形式使用eagle-ui</div></pre>",
        "version": "0.1.0",
        "url": "",
        "navs": [
            {
                "name": "主页",
                "url": ""
            },
            {
                "name": "示例",
                "url": "/documents/eagle-ui/examples/"
            }
        ]
    },
    "files": {
        "lib/panels/Panel.js": {
            "name": "lib/panels/Panel.js",
            "modules": {
                "panel(面板)": 1
            },
            "classes": {
                "Panel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/panels/PanelContent.js": {
            "name": "lib/panels/PanelContent.js",
            "modules": {},
            "classes": {
                "PanelContent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/panels/PanelFooter.js": {
            "name": "lib/panels/PanelFooter.js",
            "modules": {},
            "classes": {
                "PanelFooter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/panels/PanelHeader.js": {
            "name": "lib/panels/PanelHeader.js",
            "modules": {},
            "classes": {
                "PanelHeader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/sug/Search.js": {
            "name": "lib/sug/Search.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/tables/Column.js": {
            "name": "lib/tables/Column.js",
            "modules": {},
            "classes": {
                "Column": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/tables/Table.js": {
            "name": "lib/tables/Table.js",
            "modules": {
                "table(表格)": 1
            },
            "classes": {
                "Table": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/tables/Td.js": {
            "name": "lib/tables/Td.js",
            "modules": {},
            "classes": {
                "Td": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/tables/Th.js": {
            "name": "lib/tables/Th.js",
            "modules": {},
            "classes": {
                "Th": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/tables/Tr.js": {
            "name": "lib/tables/Tr.js",
            "modules": {},
            "classes": {
                "Tr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/utils/ClassNameMixin.js": {
            "name": "lib/utils/ClassNameMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utils/MethodMixin.js": {
            "name": "lib/utils/MethodMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utils/PropertyMixin.js": {
            "name": "lib/utils/PropertyMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utils/constants.js": {
            "name": "lib/utils/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/utils/extend.js": {
            "name": "lib/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/Button.js": {
            "name": "lib/Button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/ButtonGroup.js": {
            "name": "lib/ButtonGroup.js",
            "modules": {},
            "classes": {
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Calendar.js": {
            "name": "lib/Calendar.js",
            "modules": {},
            "classes": {
                "Calendar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/CalendarPanel.js": {
            "name": "lib/CalendarPanel.js",
            "modules": {},
            "classes": {
                "CalendarPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/CheckboxGroup.js": {
            "name": "lib/CheckboxGroup.js",
            "modules": {},
            "classes": {
                "CheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Col.js": {
            "name": "lib/Col.js",
            "modules": {},
            "classes": {
                "Col": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Crumb.js": {
            "name": "lib/Crumb.js",
            "modules": {
                "ui": 1
            },
            "classes": {
                "Crumb": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Dialog.js": {
            "name": "lib/Dialog.js",
            "modules": {},
            "classes": {
                "Dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Grid.js": {
            "name": "lib/Grid.js",
            "modules": {},
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/ImgSlider.js": {
            "name": "lib/ImgSlider.js",
            "modules": {},
            "classes": {
                "Slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Input.js": {
            "name": "lib/Input.js",
            "modules": {
                "form(表单)": 1
            },
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Label.js": {
            "name": "lib/Label.js",
            "modules": {},
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/LabelGroup.js": {
            "name": "lib/LabelGroup.js",
            "modules": {},
            "classes": {
                "LabelGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Paging.js": {
            "name": "lib/Paging.js",
            "modules": {},
            "classes": {
                "Paging": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/RadioGroup.js": {
            "name": "lib/RadioGroup.js",
            "modules": {},
            "classes": {
                "RadioGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Row.js": {
            "name": "lib/Row.js",
            "modules": {
                "grid(布局)": 1
            },
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Search.js": {
            "name": "lib/Search.js",
            "modules": {},
            "classes": {
                "Search": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Select.js": {
            "name": "lib/Select.js",
            "modules": {},
            "classes": {
                "Select": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Star.js": {
            "name": "lib/Star.js",
            "modules": {},
            "classes": {
                "Star": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Suggestion.js": {
            "name": "lib/Suggestion.js",
            "modules": {},
            "classes": {
                "Suggestion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Tab.js": {
            "name": "lib/Tab.js",
            "modules": {},
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Tabset.js": {
            "name": "lib/Tabset.js",
            "modules": {},
            "classes": {
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Toast.js": {
            "name": "lib/Toast.js",
            "modules": {},
            "classes": {
                "Toast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/Tooltip.js": {
            "name": "lib/Tooltip.js",
            "modules": {},
            "classes": {
                "Tooltip": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/TooltipPanel.js": {
            "name": "lib/TooltipPanel.js",
            "modules": {},
            "classes": {
                "TooltipPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/ValidatorPanel.js": {
            "name": "lib/ValidatorPanel.js",
            "modules": {},
            "classes": {
                "ValidatorPanel": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "panel(面板)": {
            "name": "panel(面板)",
            "submodules": {},
            "classes": {
                "Panel": 1,
                "PanelContent": 1,
                "PanelFooter": 1,
                "PanelHeader": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "lib/panels/PanelHeader.js",
            "line": 25,
            "description": "<h5>eagle-ui主要面板布局组件</h5>\n<strong><a href='../classes/Panel.html'>Panel定义整个容器</a></strong><br>\n<strong><a href='../classes/PanelContent.html'>PanelContent定义内容区域</a></strong><br>\n<strong><a href='../classes/PanelFooter.html'>PanelFooter定义底部区域</a></strong><br>\n<strong><a href='../classes/PanelHeader.html'>PanelHeader定义头部区域</a></strong><br>",
            "itemtype": "main"
        },
        "table(表格)": {
            "name": "table(表格)",
            "submodules": {},
            "classes": {
                "Column": 1,
                "Table": 1,
                "Td": 1,
                "Th": 1,
                "Tr": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/tables/Tr.js",
            "line": 25,
            "description": "表格组件",
            "itemtype": "main",
            "static": 1
        },
        "form(表单)": {
            "name": "form(表单)",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "CheckboxGroup": 1,
                "RadioGroup": 1,
                "Select": 1,
                "ValidatorPanel": 1,
                "Button": 1,
                "ButtonGroup": 1,
                "Input": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "lib/ValidatorPanel.js",
            "line": 31,
            "description": "<h5>form表单模块集成了常见的表单元素形式:</h5>\n<strong><a href='../classes/CheckboxGroup.html'>checkbox多选框</a></strong><br>\n<strong><a href='../classes/RadioGroup.html'>radio单选框</a></strong><br>\n<strong><a href='../classes/Input.html'>input输入框</a></strong><br>\n<strong><a href='../classes/Select.html'>select下拉框</a></strong><br>\n<strong><a href='../classes/ButtonGroup.html'>button按钮组</a></strong>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "ui": {
            "name": "ui",
            "submodules": {},
            "classes": {
                "Slider": 1,
                "Label": 1,
                "Search": 1,
                "Star": 1,
                "Calendar": 1,
                "CalendarPanel": 1,
                "Crumb": 1,
                "Dialog": 1,
                "LabelGroup": 1,
                "Paging": 1,
                "Suggestion": 1,
                "Tab": 1,
                "Tabset": 1,
                "Toast": 1,
                "Tooltip": 1,
                "TooltipPanel": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "lib/TooltipPanel.js",
            "line": 54,
            "description": "<h5>eagle-ui部分UI组件</h5>\n<strong><a href='../classes/Crumb.html'>Crumb封装层级链接(面包屑)</a></strong><br>\n<strong><a href='../classes/Slider.html'>Slider组件展示幻灯片形式的照片展示</a></strong><br>\n<strong><a href='../classes/Label.html'>Label定义标签展示的形式</a></strong><br>\n<strong><a href='../classes/Search.html'>Search定义不同的搜索框</a></strong><br>\n<strong><a href='../classes/Star.html'>Star以星星的形式定义不同的星级展示</a></strong><br>\n<strong><a href='../classes/Calendar.html'>Calendar为日期选择组件</a></strong><br>\n<strong><a href='../classes/Dialog.html'>Dialog模拟了浏览器弹出的alert、confirm等交互形式</a></strong><br>\n<strong><a href='../classes/Paging.html'>Paging展示了常见的分页形式标签，封装了点击功能</a></strong><br>\n<strong><a href='../classes/Suggestion.html'>Suggestion在Search的基础上，动态联想匹配项</a></strong><br>\n<strong><a href='../classes/Tab.html'>Tab模拟了常见的导航条样式</a></strong><br>\n<strong><a href='../classes/Toast.html'>Toast可以模拟Ajax请求成功或者失败后，通知用户的UI界面展示</a></strong><br>\n<strong><a href='../classes/Tooltip.html'>Tooltip在Label的基础上，增加了鼠标hover或者点击的提示功能</a></strong>",
            "itemtype": "main"
        },
        "grid(布局)": {
            "name": "grid(布局)",
            "submodules": {},
            "classes": {
                "Row": 1,
                "Col": 1,
                "Grid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/Row.js",
            "line": 27,
            "description": "定义行",
            "itemtype": "main",
            "static": 1
        }
    },
    "classes": {
        "Panel": {
            "name": "Panel",
            "shortname": "Panel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "lib/panels/Panel.js",
            "line": 42,
            "description": "Panel定义整个容器",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置panel的heading属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel heading=\"我是标题\">\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t};\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "PanelContent": {
            "name": "PanelContent",
            "shortname": "PanelContent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "lib/panels/PanelContent.js",
            "line": 25,
            "description": "PanelContent定义内容区域",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置panel的heading属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel heading=\"我是标题\">\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t};\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "PanelFooter": {
            "name": "PanelFooter",
            "shortname": "PanelFooter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "lib/panels/PanelFooter.js",
            "line": 25,
            "description": "PanelFooter定义底部区域",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置panel的heading属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel heading=\"我是标题\">\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t};\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "PanelHeader": {
            "name": "PanelHeader",
            "shortname": "PanelHeader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "panel(面板)",
            "namespace": "",
            "file": "lib/panels/PanelHeader.js",
            "line": 25,
            "description": "PanelHeader定义头部区域",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Row,Col,Grid,\n\t    Panel,PanelHeader,PanelFooter,PanelContent,\n\t    Input,Label,LabelGroup,\n\t    FormGroup,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <h3>panel嵌套<small>通过设置panel的heading属性达到此效果</small></h3>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel heading=\"我是标题\">\n\t                            <PanelContent>\n\t                                <Row>\n\t                                    <Col>\n\t                                        <FormGroup>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>姓名</Col>\n\t                                                <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>性别</Col>\n\t                                                <Col sm={10}>\n\t                                                    <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                        <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                        <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                    </RadioGroup>\n\t                                                </Col>\n\t                                            </Row>\n\t                                            <Row>\n\t                                                <Col sm={2}>所在城市</Col>\n\t                                                <Col sm={10} layer>\n\t                                                    <Row style={{margin:0}}>\n\t                                                        <Col sm={4} end>\n\t                                                            <Select placeholder=\"请选择城市\" >\n\t                                                                <item value='bei'>北京</item>\n\t                                                                <item value='shang'>上海</item>\n\t                                                                <item value='nan'>南京</item>\n\t                                                            </Select>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </Col>\n\t                                            </Row>\n\t                                        </FormGroup>\n\t                                    </Col>\n\t                                </Row>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Panel>\n\t                            <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                            <PanelContent>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <Panel>\n\t                                                    <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                    <PanelContent>\n\t                                                        <Row>\n\t                                                            <Col>\n\t                                                                我是内容区\n\t                                                            </Col>\n\t                                                        </Row>\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                                <Panel>\n\t                                    <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                我是内容区\n\t                                            </Col>\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </PanelContent>\n\t                        </Panel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t};\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Column": {
            "name": "Column",
            "shortname": "Column",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "lib/tables/Column.js",
            "line": 25,
            "description": "封装Tr,Td组件，直接配合设置data属性的Table使用",
            "is_constructor": 1,
            "content": "{string} type 内容",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Table , Tr ,Td ,Th ,Column,Row,Col} from 'eagle-ui.js';\n\tvar tableData=[\n\t    {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t    {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t    {name: 'Estevan', email: 'Aimee7@hotmail.com',score:106},\n\t    {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t    {name: 'Tressa', email: 'Yadira1@hotmail.com',score:900},\n\t];\n\texport default class TableCls extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Table": {
            "name": "Table",
            "shortname": "Table",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "lib/tables/Table.js",
            "line": 49,
            "description": "表格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Table , Tr ,Td ,Th ,Column,Row,Col} from 'eagle-ui.js';\n\tvar tableData=[\n\t    {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t    {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t    {name: 'Estevan', email: 'Aimee7@hotmail.com',score:106},\n\t    {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t    {name: 'Tressa', email: 'Yadira1@hotmail.com',score:900},\n\t];\n\texport default class TableCls extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Td": {
            "name": "Td",
            "shortname": "Td",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "lib/tables/Td.js",
            "line": 25,
            "description": "表格单元格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Table , Tr ,Td ,Th ,Column,Row,Col} from 'eagle-ui.js';\n\tvar tableData=[\n\t    {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t    {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t    {name: 'Estevan', email: 'Aimee7@hotmail.com',score:106},\n\t    {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t    {name: 'Tressa', email: 'Yadira1@hotmail.com',score:900},\n\t];\n\texport default class TableCls extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Th": {
            "name": "Th",
            "shortname": "Th",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "lib/tables/Th.js",
            "line": 25,
            "description": "表头单元格组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Table , Tr ,Td ,Th ,Column,Row,Col} from 'eagle-ui.js';\n\tvar tableData=[\n\t    {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t    {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t    {name: 'Estevan', email: 'Aimee7@hotmail.com',score:106},\n\t    {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t    {name: 'Tressa', email: 'Yadira1@hotmail.com',score:900},\n\t];\n\texport default class TableCls extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Tr": {
            "name": "Tr",
            "shortname": "Tr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "table(表格)",
            "namespace": "",
            "file": "lib/tables/Tr.js",
            "line": 25,
            "description": "表格行组件",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Table , Tr ,Td ,Th ,Column,Row,Col} from 'eagle-ui.js';\n\tvar tableData=[\n\t    {name: 'Rylan', email: 'Angelita_Weimann42@gmail.com',score:100},\n\t    {name: 'Amelia', email: 'Dexter.Trantow57@hotmail.com',score:200},\n\t    {name: 'Estevan', email: 'Aimee7@hotmail.com',score:106},\n\t    {name: 'Florence', email: 'Jarrod.Bernier13@yahoo.com',score:233},\n\t    {name: 'Tressa', email: 'Yadira1@hotmail.com',score:900},\n\t];\n\texport default class TableCls extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Row>\n\t                    <Col>\n\t                        <Table data={tableData}>\n\t                            <Column\n\t                                header=\"Name\"\n\t                                field='name'\n\t                                cell={\n\t                                    <Td data={tableData}></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"red\"}}>Email</span>}\n\t                                field='email'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                            <Column\n\t                                header={<span style={{color:\"green\"}}>Score</span>}\n\t                                field='score'\n\t                                cell={\n\t                                    <Td data={tableData} ></Td>\n\t                                }\n\t                                />\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col>\n\t                        <Table>\n\t                            <thead>\n\t                            <Tr>\n\t                                <Th>数据类型</Th>\n\t                                <Th>数据项</Th>\n\t                                <Th>昨日</Th>\n\t                                <Th>本月</Th>\n\t                                <Th>上月</Th>\n\t                                <Th>本月城市排名</Th>\n\t                            </Tr>\n\t                            </thead>\n\t                            <tbody>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">过程指标</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td arrow-up>消费交易额</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr split>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td arrow-down>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td rowSpan=\"4\">业绩</Td>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            <Tr>\n\t                                <Td>消费交易额</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>1876500</Td>\n\t                                <Td>200</Td>\n\t                            </Tr>\n\t                            </tbody>\n\t                        </Table>\n\t                    </Col>\n\t                </Row>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/Button.js",
            "line": 30,
            "description": "- 按钮组件提供所有properties中内置的颜色及字体大小样式供选择<br/>\n- 也可以自定义行内样式和className名字定义UI展示",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {ButtonGroup, Button ,Row ,Col ,Grid }from 'eagle-ui.js';\n\texport default class ButtonCls extends Component{\n\t    onActive(target,html){\n\t        alert('测试');\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col>\n\t                        <ButtonGroup egType=\"justify\" activeCallback={this.onActive}>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">水平按钮组1</Button>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">水平按钮组2</Button>\n\t                        </ButtonGroup>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={12}>\n\t                        <ButtonGroup egType=\"tacked\">\n\t                            <Button radius egSize=\"sm\" egStyle=\"\">垂直按钮组1</Button>\n\t                            <Button radius egSize=\"sm\" egStyle=\"\">垂直按钮组2</Button>\n\t                        </ButtonGroup>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"warning\">警告</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"success\">成功</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"danger\">危险</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"error\">错误</Button></Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" egStyle=\"success\" disabled>成功不可点</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" >默认</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" disabled>默认不可点</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" egStyle=\"link\" >链接</Button></Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/ButtonGroup.js",
            "line": 30,
            "description": "按钮组组件配合Button组件,提供了横、竖两种排列方式<br/>",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {ButtonGroup, Button ,Row ,Col ,Grid }from 'eagle-ui.js';\n\texport default class ButtonCls extends Component{\n\t    onActive(target,html){\n\t        alert('测试');\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col>\n\t                        <ButtonGroup egType=\"justify\" activeCallback={this.onActive}>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">水平按钮组1</Button>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">水平按钮组2</Button>\n\t                        </ButtonGroup>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={12}>\n\t                        <ButtonGroup egType=\"tacked\">\n\t                            <Button radius egSize=\"sm\" egStyle=\"\">垂直按钮组1</Button>\n\t                            <Button radius egSize=\"sm\" egStyle=\"\">垂直按钮组2</Button>\n\t                        </ButtonGroup>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"warning\">警告</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"success\">成功</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"danger\">危险</Button></Col>\n\t                    <Col sm={3}><Button radius egSize=\"sm\" egStyle=\"error\">错误</Button></Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" egStyle=\"success\" disabled>成功不可点</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" >默认</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" disabled>默认不可点</Button></Col>\n\t                    <Col sm={3}><Button block radius egSize=\"sm\" egStyle=\"link\" >链接</Button></Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Calendar": {
            "name": "Calendar",
            "shortname": "Calendar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Calendar.js",
            "line": 25,
            "description": "日历组件<br />\n需要和CalendarPanel组合使用\n<ul>\n    <li>startDate:定义起始日期<br>\n        例如<code>\n                startDate=\"2015-11-11\"\n        </code>\n    </li>\n    <li>endDate:定义结束日期<br>\n        例如<code>\n           endDate=\"2015-12-1\"\n        </code>\n    </li>\n    <li>defaultDate:默认今天<br>\n        默认<code>\n           defaultDate=new Date()\n        </code>\n    </li>\n     <li>format:日期格式<br>\n        默认<code>\n         format='yyyy-MM-dd'\n        </code>\n    </li>\n     <li>selectCallback:选择某个具体日期后执行的回调函数<strong style='color:blue'>配合CalendarPanel使用时,不需要定义</strong><br>\n        例如<code>\n        selectCallback(dateString);参数为format后的日期\n        </code>\n    </li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component,PropTypes} from 'react';\n\timport {Input,Row ,Col,Grid,CalendarPanel} from 'eagle-ui.js';\n\timport querystring from 'querystring';\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            show:false\n\t        }\n\t    };\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={12}>\n\t                        <CalendarPanel startDate=\"2015-11-11\">\n\t                            <Input placeholder=\"请选择日期\" style={{width:'150px'}} />\n\t                        </CalendarPanel>\n\t\n\t                    </Col>\n\t                    <Col sm={1} end>\n\t                        每日邮报报道,英国华威大学划艇队推出了2016年新版裸体日历,小伙子们在镜头前“坦诚相见”,大秀肌肉。这是该校划艇队第六次拍摄这种日历。 长期锻炼的队员们骄傲的\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}>\n\t                        <CalendarPanel startDate=\"2015-11-11\" endDate=\"2015-12-1\">\n\t                            <Input placeholder=\"请选择日期\" style={{width:'150px'}} />\n\t                        </CalendarPanel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "CalendarPanel": {
            "name": "CalendarPanel",
            "shortname": "CalendarPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/CalendarPanel.js",
            "line": 39,
            "description": "CalendarPanel组件\nCalendarPanel组件UI接口和Calendar基本保持一致，请查看Calendar\n主要属性接口:\n<ul>\n    <li>getValueCallback参数为<code>格式化后的string</code></li>\n    <li style='color:red'><a href='./Calendar.html'>其他属性定义请参照Calendar组件</a></li>\n</ul>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component,PropTypes} from 'react';\n\timport {Input,Row ,Col,Grid,CalendarPanel} from 'eagle-ui.js';\n\timport querystring from 'querystring';\n\texport default class Calendar extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            show:false\n\t        }\n\t    };\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={12}>\n\t                        <CalendarPanel startDate=\"2015-11-11\">\n\t                            <Input placeholder=\"请选择日期\" style={{width:'150px'}} />\n\t                        </CalendarPanel>\n\t\n\t                    </Col>\n\t                    <Col sm={1} end>\n\t                        每日邮报报道,英国华威大学划艇队推出了2016年新版裸体日历,小伙子们在镜头前“坦诚相见”,大秀肌肉。这是该校划艇队第六次拍摄这种日历。 长期锻炼的队员们骄傲的\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={3}>\n\t                        <CalendarPanel startDate=\"2015-11-11\" endDate=\"2015-12-1\">\n\t                            <Input placeholder=\"请选择日期\" style={{width:'150px'}} />\n\t                        </CalendarPanel>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "CheckboxGroup": {
            "name": "CheckboxGroup",
            "shortname": "CheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/CheckboxGroup.js",
            "line": 32,
            "description": "CheckboxGroup需与Input组件配合使用<br/>\n它的作用是将type=checkbox的Input组件在UI上展示在一起",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {CheckboxGroup,Grid,Row,Col,PanelContent,Panel,RadioGroup,Input,Select,FormGroup,} from 'eagle-ui.js';\n\tlet demo = class extends Component{\n\t    getValue(val){\n\t        alert(val);\n\t    }\n\t    change(e){\n\t        alert(e.target.value);\n\t    }\n\t    render(){\n\t        return (\n\t            <CheckboxGroup>\n\t            <Input  type=\"checkbox\" checked  disabled={true}  />\n\t            <Input  type=\"checkbox\"  disabled={true}   />\n\t            <Input  type=\"checkbox\" getValueCallback={::this.getValue}  value=\"ccc\"  />\n\t            <Input  type=\"checkbox\" checked onChange={::this.change} value=\"bbb\"  />\n\t            </CheckboxGroup>)\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Col": {
            "name": "Col",
            "shortname": "Col",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "lib/Col.js",
            "line": 27,
            "description": "定义列",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Search,Select,Input,Grid,Row,Col,List,Item} from 'eagle-ui.js';\n\tlet SearchSec= class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select  callback={function(val){alert(val)}}>\n\t                            <item> 北京</item>\n\t                            <item> 上海</item>\n\t                            <item> 南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}>\n\t                        </Search>\n\t                    </Col>\n\t                    <Col sm={2}>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Crumb": {
            "name": "Crumb",
            "shortname": "Crumb",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Crumb.js",
            "line": 49,
            "description": "面包屑组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Crumb} from 'eagle-ui.js';\n\texport default class CrumbCls extends Component {\n\t    render() {\n\t        return (\n\t            <Crumb>\n\t                <item url=\"dddd.html\">菜单</item>\n\t                <item url=\"dddd.html\">菜单</item>\n\t                <item url=\"dddd.html\">菜单</item>\n\t                <item url=\"dddd.html\">菜单</item>\n\t                <item url=\"dddd.html\">菜单</item>\n\t                <item url='baidu.html'>菜单</item>\n\t            </Crumb>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Dialog.js",
            "line": 11,
            "description": "弹出层组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui';\n\tlet Demo= class Demo extends Component{\n\t    static defaultProps = {\n\t    };\n\t    constructor(props, context) {\n\t        super(props, context);\n\t    }\n\t    getScope(dialog){\n\t        this.dialog = dialog;\n\t    }\n\t    show(name){\n\t        Dialog.mask(name).then(function(){\n\t            console.dir('...alert....');\n\t            Dialog.close();\n\t        },function(type){\n\t            console.dir(type);\n\t        });\n\t    }\n\t    showAlert(){\n\t        Dialog.alert('哈哈，我是alert');\n\t    }\n\t    nomask(){\n\t        Dialog.alert('哈哈，我是alert',{\n\t            isMask:false\n\t        });\n\t    }\n\t\n\t    showConfirm(){\n\t        Dialog.confirm('确定你已经打开了么？').then(()=>{\n\t            alert('确定');\n\t        },()=>{\n\t            alert('取消');\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return (\n\t            <div>\n\t                <Button onClick={::this.show.bind(this,'demo1')} className=\"mg-right-15\">点击我mask</Button>\n\t                <Button onClick={::this.show.bind(this,'demo2')} className=\"mg-right-15\">点击我mask2表单秀</Button>\n\t                <Button onClick={::this.show.bind(this,'demo3')} className=\"mg-right-15\">点击我mask3 outside</Button>\n\t                <Button onClick={::this.showAlert} className=\"mg-right-15\">点击我alert</Button>\n\t                <Button onClick={::this.nomask} className=\"mg-right-15\">无遮罩显示</Button>\n\t                <Button onClick={::this.showConfirm}>点击我Confirm</Button>\n\t                <Dialog id=\"demo1\" egSize=\"xs\" buttonAlign=\"right\" title=\"苍老师你好\" buttons={[\n\t                    {\n\t                        type: 'success',\n\t                        name: '确认',\n\t                        callback:()=>{}\n\t                    },\n\t                    {\n\t                        type:'cancel',\n\t                        egStyle:'white',\n\t                        name:'取消',\n\t                        callback:()=>{}\n\t                    },\n\t                    {\n\t                        egStyle:'warning',\n\t                        name:'自定义按钮',\n\t                        callback:()=>{alert('自定义按钮');}\n\t                    }\n\t                    ]}>\n\t                    <div>\n\t                        哈哈，你好苍老师\n\t                    </div>\n\t                </Dialog>\n\t                <Dialog id=\"demo2\" egSize=\"sm\" title=\"表单验证\" buttons={[\n\t                    {\n\t                        type: 'success',\n\t                        name: '提交',\n\t                        callback:()=>{}\n\t                    },\n\t                    {\n\t                        type:'cancel',\n\t                        egStyle:'white',\n\t                        name:'取消',\n\t                        callback:()=>{}\n\t                    }\n\t                    ]}>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <Panel heading=\"我是标题\">\n\t                                    <PanelContent>\n\t                                        <Row>\n\t                                            <Col>\n\t                                                <FormGroup>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>姓名</Col>\n\t                                                        <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                    </Row>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>姓名</Col>\n\t                                                        <Col sm={10}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                    </Row>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>性别</Col>\n\t                                                        <Col sm={10}>\n\t                                                            <RadioGroup defaultChecked=\"男\" name=\"radio-sex\">\n\t                                                                <Input  type=\"radio\"  label=\"男\" value=\"男\" />\n\t                                                                <Input  type=\"radio\"  label=\"女\" value=\"女\"  />\n\t                                                            </RadioGroup>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>体育爱好</Col>\n\t                                                        <Col sm={10}>\n\t                                                            <CheckboxGroup>\n\t                                                                <Input  type=\"checkbox\" label=\"足球\" checked   />\n\t                                                                <Input  type=\"checkbox\" label=\"篮球\"    />\n\t                                                                <Input  type=\"checkbox\" label=\"羽毛球\" checked   />\n\t                                                                <Input  type=\"checkbox\" label=\"乒乓球\"    />\n\t                                                            </CheckboxGroup>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>姓名</Col>\n\t                                                        <Col sm={13}><Input name=\"test\" id=\"test\" placeholder=\"请输入姓名\"   /></Col>\n\t                                                        <FormGroup>\n\t                                                            <Col sm={13}>出生日期</Col>\n\t                                                            <Col sm={13} end><Input name=\"test\" id=\"test\" placeholder=\"请输入出生日期\"   /></Col>\n\t                                                        </FormGroup>\n\t                                                    </Row>\n\t                                                    <Row>\n\t                                                        <Col sm={2}>所在城市</Col>\n\t                                                        <Col sm={10} layer>\n\t                                                            <Row style={{margin:0}}>\n\t                                                                <Col sm={4} end>\n\t                                                                    <Select placeholder=\"请选择城市\" >\n\t                                                                        <item value='bei'>北京</item>\n\t                                                                        <item value='shang'>上海</item>\n\t                                                                        <item value='nan'>南京</item>\n\t                                                                    </Select>\n\t                                                                </Col>\n\t                                                            </Row>\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </FormGroup>\n\t                                            </Col>\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col padding={'0'}>\n\t                                                <Panel heading=\"我是标题二\">\n\t                                                    <PanelContent padding={true}>\n\t                                                        我是下一个内容区\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t\n\t                                        </Row>\n\t                                        <Row>\n\t                                            <Col padding={'0'}>\n\t                                                <Panel heading=\"我是标题三\" >\n\t                                                    <PanelContent padding={true}>\n\t                                                        我是下一个内容区\n\t                                                    </PanelContent>\n\t                                                </Panel>\n\t                                            </Col>\n\t\n\t                                        </Row>\n\t                                    </PanelContent>\n\t                                </Panel>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </Dialog>\n\t                <Dialog id=\"demo3\" title=\"panel\" outside egSize=\"lg\">\n\t                    <Panel egType=\"normal\" margin=\"0\">\n\t                        <PanelHeader>另一种形式的嵌套</PanelHeader>\n\t                        <PanelContent>\n\t                            <Panel egType=\"normal\">\n\t                                <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                <PanelContent>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            我是内容区\n\t                                        </Col>\n\t                                    </Row>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            <Panel  margin={'0'}>\n\t                                                <PanelHeader>另一种形式的嵌套3</PanelHeader>\n\t                                                <PanelContent>\n\t                                                    <Row>\n\t                                                        <Col>\n\t                                                            我是内容区\n\t                                                        </Col>\n\t                                                    </Row>\n\t                                                </PanelContent>\n\t                                            </Panel>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </PanelContent>\n\t                            </Panel>\n\t                            <Panel margin={'0'}>\n\t                                <PanelHeader>另一种形式的嵌套2</PanelHeader>\n\t                                <PanelContent>\n\t                                    <Row>\n\t                                        <Col>\n\t                                            我是内容区\n\t                                        </Col>\n\t                                    </Row>\n\t                                </PanelContent>\n\t                            </Panel>\n\t                        </PanelContent>\n\t                    </Panel>\n\t                </Dialog>\n\t            </div>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "lib/Grid.js",
            "line": 39,
            "description": "布局组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Search,Select,Input,Grid,Row,Col,List,Item} from 'eagle-ui.js';\n\tlet SearchSec= class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select  callback={function(val){alert(val)}}>\n\t                            <item> 北京</item>\n\t                            <item> 上海</item>\n\t                            <item> 南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}>\n\t                        </Search>\n\t                    </Col>\n\t                    <Col sm={2}>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/ImgSlider.js",
            "line": 31,
            "description": "照片浏览组件<br />\n提供的UI展示属性接口如下<br/>\n <ul>\n   <li>imgList:定义数据源数组<br>\n       例如\n       <pre><code>\n                [{\n                      profile:'1叔2015上传',\n                      url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n                      description:'闪惠商户培训资料',\n                      thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n                   }]\n       </code></pre>\n   </li>\n   <li>show:定义隐藏还是展示组件\n       <code>\n           <strong>默认</strong>false\n       </code>\n   </li>\n   <li>urlKey:定义大图对应imgList数组中的key\n       <code>\n           在本例子中就是url\n       </code>\n   </li>\n   <li>titleKey:定义大图下方文字对应imgList数组的key\n       <code>\n           在本例子中就是description\n       </code>\n   </li>\n   <li>profileKey: 定义大图下方文字对应imgList数组的key\n       <code>\n           在本例子中就是profile\n       </code>\n   </li>\n   <li>showThumbnail:定义是否展示缩略图\n       <code>\n           <strong>默认</strong>true\n       </code>\n   </li>\n   <li>thumbnailKey:定义缩略图对应imgList数组的key\n       <code>\n           <strong>默认</strong>和urlKey保持一致,本例中就是thumbnail\n       </code>\n   </li>\n    <li>pageNum:定义每页缩略图的个数\n       <code>\n           <strong>默认</strong>为5\n       </code>\n   </li>\n </ul>\n 使用方式:\n <pre><code>&#60;imgSlider show={true} showThumbnail={true}\n          imgList={imgList}\n          profileKey={'profile'}\n          urlKey={'url'}\n          titleKey={'description'}\n          thumbnailKey={thumbnailKey} /&#62;</code>\n </pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React, { Component ,PropTypes} from 'react';\n\timport {Button,Column,ImgSlider} from '../../../src/index.js';\n\t\n\texport default class SliderDemo extends Component {\n\t    constructor(props,context) {\n\t        super(props,context);\n\t        this.state={\n\t            show:true,\n\t            showThumbnail:true\n\t        }\n\t    }\n\t    handleSlider(){\n\t        switch(arguments[0]){\n\t            case 'showDefinedThumbnail':\n\t                this.setState({\n\t                    show:true,\n\t                    showThumbnail:true,\n\t                    thumbnailKey:'thumbnail'\n\t                });break;\n\t            case 'noShowThumbnail':\n\t                this.setState({\n\t                    show:true,\n\t                    showThumbnail:false,\n\t                    thumbnailKey:undefined\n\t                });break;\n\t            default :\n\t                this.setState({\n\t                    show:true,\n\t                    showThumbnail:true,\n\t                    thumbnailKey:undefined\n\t                });break;\n\t        }\n\t    }\n\t    render() {\n\t        let {show,showThumbnail,thumbnailKey} = this.state;\n\t        let imgList=[\n\t            {\n\t                profile:'1叔2015上传',\n\t                url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'1哥2015上传',\n\t                url:'http://img5.imgtn.bdimg.com/it/u=1478257864,2882073929&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=2544720638,729810412&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'2哥2015上传',\n\t                url:'http://img2.zol.com.cn/product/95/20/ceSFw3e3TqLNM.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'3哥2015上传',\n\t                url:'http://www.bz55.com/uploads/allimg/150309/139-150309101F2.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'4哥2015上传',\n\t                url: 'http://www.bz55.com/uploads/allimg/150309/139-150309101F7.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img0.imgtn.bdimg.com/it/u=2926840907,3192872789&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5哥2015上传',\n\t                url: 'http://www.bz55.com/uploads/allimg/150309/139-150309101A8.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img5.imgtn.bdimg.com/it/u=4207978144,3154923917&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5哥2015上传',\n\t                url: 'http://img3.imgtn.bdimg.com/it/u=227823385,2843041802&fm=21&gp=0.jpg',\n\t                description:'闪惠商户培训资料',\n\t                thumbnail:'http://img2.imgtn.bdimg.com/it/u=1813764503,1895922603&fm=21&gp=0.jpg'\n\t            },\n\t            {\n\t                profile:'5叔2015上传',\n\t                url:'http://img0.imgtn.bdimg.com/it/u=1649172259,4185796887&fm=21&gp=0.jpg',\n\t                description:'熊猫野外生存',\n\t                thumbnail:'http://img5.imgtn.bdimg.com/it/u=1432870041,1164599966&fm=21&gp=0.jpg'\n\t            }\n\t        ];\n\t        let pageNum=4;\n\t        return (\n\t            <div>\n\t                <Button success onClick={(e)=>this.handleSlider.call(this)} >点击出现照片展示插件(缩略图默认)</Button>\n\t                <Button success className='mg-left-10' onClick={(e)=>this.handleSlider.call(this,'showDefinedThumbnail')}>点击出现照片展示插件(缩略图自定义)</Button>\n\t                <Button className='mg-left-10' success onClick={(e)=>this.handleSlider.call(this,'noShowThumbnail')}>点击出现照片展示插件(无缩略图)</Button>\n\t                <ImgSlider  show={show} showThumbnail={showThumbnail}\n\t                            imgList={imgList}\n\t                            profileKey={'profile'} urlKey={'url'}  titleKey={'description'} thumbnailKey={thumbnailKey}\n\t                            pageNum={pageNum}/>\n\t            </div>\n\t\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/Input.js",
            "line": 46,
            "description": "input表单组件<br />\n设置type属性可以生成radio、checkbox、input等元素标签，并包裹初始化样式",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Input,RadioGroup,Select,FormGroup,CheckboxGroup,Grid,Row,Col,PanelContent,Panel} from 'eagle-ui.js';\n\tlet demo = class extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t    };\n\t    getValueCallback(val){\n\t        alert(val);\n\t        console.dir(val);\n\t    }\n\t\n\t    getValue(val){\n\t        alert(val);\n\t    }\n\t    change(e){\n\t        alert(e.target.value);\n\t    }\n\t    render(){\n\t        return (\n\t            <Row>\n\t                <Col sm={12}><Input name=\"test\" id=\"test\" placeholder=\"请输入\" icon=\"calendar\"  /></Col>\n\t                <Col sm={12}>\n\t                    <CheckboxGroup>\n\t                        <Input  type=\"checkbox\" checked  disabled={true}  />\n\t                        <Input  type=\"checkbox\"  disabled={true}   />\n\t                        <Input  type=\"checkbox\" getValueCallback={::this.getValue}  value=\"ccc\"  />\n\t                        <Input  type=\"checkbox\" checked onChange={::this.change} value=\"bbb\"  />\n\t                    </CheckboxGroup>\n\t                </Col>\n\t                <Col sm={12}>\n\t                    <Col sm={6}>\n\t                        <RadioGroup defaultChecked=\"石榴\" name=\"radio-test\">\n\t                            <Input  type=\"radio\"  label=\"石榴\" value=\"石榴\" />\n\t                            <Input  type=\"radio\"  label=\"橘子\" value=\"橘子\"  />\n\t                            <Input  type=\"radio\"  label=\"苹果\" value=\"苹果\" />\n\t                        </RadioGroup>\n\t                    </Col>\n\t                    <Col sm={6}>\n\t                        <RadioGroup defaultChecked=\"鸡蛋\" name=\"radio-foot\" getValueCallback={this.getValueCallback}>\n\t                            <Input  type=\"radio\"  label=\"大白菜\" value=\"大白菜\" />\n\t                            <Input  type=\"radio\"  label=\"鸡蛋\" value=\"鸡蛋\" disabled={true}  />\n\t                            <Input  type=\"radio\"  label=\"猪肉\" value=\"猪肉\" />\n\t                            <Input  type=\"radio\"  label=\"牛肉\" value=\"牛肉\" />\n\t                            <Input  type=\"radio\"  label=\"鱼肉\" value=\"鱼肉\" disabled={true} />\n\t                        </RadioGroup>\n\t                    </Col>\n\t                </Col>\n\t            </Row>)\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Label.js",
            "line": 30,
            "description": "标签",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\t/**\n\t * Created by mac on 15/11/4.\n\t */\n\timport React,{Component} from 'react';\n\timport {Label,LabelGroup,Panel,Grid,Row,Col,PanelContent} from '../../../src/index.js';\n\t\n\tlet Demo = class Demo extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t    }\n\t\n\t    show(value,text,target,active){\n\t        console.dir(value);\n\t    }\n\t\n\t    render(){\n\t        return (\n\t            <Panel style={{\n\t                margin:'20px'\n\t            }}>\n\t                <PanelContent >\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup spacing={94} title='行政区' defaultChecked='全部' activeCallback={this.show} end>\n\t                                    <Label value=\"0\" className=\"all\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup title='商品类型' defaultChecked='全部' activeCallback={this.show} end>\n\t                                    <Label value=\"0\" className=\"all\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup defaultChecked='卢湾区' activeCallback={this.show} end>\n\t                                    <Label value=\"0\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>普通标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup egType=\"simple\" activeCallback={this.show}>\n\t                                    <Label value=\"0\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label url=\"http://baidu.com\">点击跳转至百度</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>form标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\">121212121</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>单个标签</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={2}>\n\t                                <Label active egSize=\"xs\">选中</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label  egStyle=\"success\">成功</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label  egStyle=\"error\">错误</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label disabled>禁用</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label egStyle=\"warning\" egSize=\"lg\" >warning</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label >默认</Label>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </PanelContent>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t\n\texport default class LabelCls extends Component{\n\t    render(){\n\t        return (\n\t            <Demo />\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "LabelGroup": {
            "name": "LabelGroup",
            "shortname": "LabelGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/LabelGroup.js",
            "line": 40,
            "description": "标签组",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Label,LabelGroup,Panel,Grid,Row,Col,PanelContent} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    show(value,text,target,active){\n\t        console.dir(value);\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel style={{\n\t                margin:'20px'\n\t            }}>\n\t                <PanelContent >\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup spacing={94} title='行政区' defaultChecked='全部' activeCallback={this.show} end>\n\t                                    <Label value=\"0\" className=\"all\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup title='商品类型' defaultChecked='全部' activeCallback={this.show} end>\n\t                                    <Label value=\"0\" className=\"all\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup defaultChecked='卢湾区' activeCallback={this.show} end>\n\t                                    <Label value=\"0\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label>浦东新区</Label>\n\t                                    <Label>黄浦区</Label>\n\t                                    <Label>普陀区</Label>\n\t                                    <Label>闸北区</Label>\n\t                                    <Label>虹口区</Label>\n\t                                    <Label>杨浦区</Label>\n\t                                    <Label>宝山区</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>普通标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <LabelGroup egType=\"simple\" activeCallback={this.show}>\n\t                                    <Label value=\"0\">全部</Label>\n\t                                    <Label value=\"1\">卢湾区</Label>\n\t                                    <Label value=\"10\">徐汇区</Label>\n\t                                    <Label>静安区</Label>\n\t                                    <Label>长宁区</Label>\n\t                                    <Label>闵行区</Label>\n\t                                    <Label url=\"http://baidu.com\">点击跳转至百度</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>form标签组</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\">121212121</Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                            <Col sm={6}>\n\t                                <LabelGroup egType=\"form\" >\n\t                                    <Label value=\"0\">当前日佣金基数</Label>\n\t                                    <Label value=\"1\"><h1 className=\"color-error\">9112</h1></Label>\n\t                                </LabelGroup>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col>\n\t                                <h3>单个标签</h3>\n\t                            </Col>\n\t                        </Row>\n\t                        <Row>\n\t                            <Col sm={2}>\n\t                                <Label active egSize=\"xs\">选中</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label  egStyle=\"success\">成功</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label  egStyle=\"error\">错误</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label disabled>禁用</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label egStyle=\"warning\" egSize=\"lg\" >warning</Label>\n\t                            </Col>\n\t                            <Col sm={2}>\n\t                                <Label >默认</Label>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </PanelContent>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Paging": {
            "name": "Paging",
            "shortname": "Paging",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Paging.js",
            "line": 25,
            "description": "分页组件",
            "is_constructor": 1,
            "extends": "Component",
            "requires": [
                "React classnames"
            ],
            "example": [
                "\t<html lang=\"en\">\n\t</html>"
            ],
            "exampleTitles": [
                "UI展示"
            ],
            "show": true,
            "author": "min.xiao@dianping.com"
        },
        "RadioGroup": {
            "name": "RadioGroup",
            "shortname": "RadioGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/RadioGroup.js",
            "line": 36,
            "description": "RadioGroup需与Input组件配合使用<br/>\n它的作用是将type=radio的Input组件在UI上展示在一起",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component,PropTypes} from 'react';\n\timport {RadioGroup,Input,Select,FormGroup,CheckboxGroup,Grid,Row,Col,PanelContent,Panel} from 'eagle-ui.js';\n\tlet Demo= class Demo extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t\n\t        this.state = {\n\t            show:false\n\t        }\n\t    };\n\t\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    getValueCallback(val){\n\t        alert(val);\n\t        console.dir(val);\n\t    }\n\t    getValue(val){\n\t        alert(val);\n\t    }\n\t    change(e){\n\t        alert(e.target.value);\n\t        console.dir(e.target.value);\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel>\n\t                <PanelContent>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col sm={12}>\n\t                                <Col sm={6}>\n\t                                    <RadioGroup defaultChecked=\"石榴\" name=\"radio-test\">\n\t                                        <Input  type=\"radio\"  label=\"石榴\" value=\"石榴\" />\n\t                                        <Input  type=\"radio\"  label=\"橘子\" value=\"橘子\"  />\n\t                                        <Input  type=\"radio\"  label=\"苹果\" value=\"苹果\" />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                                <Col sm={6}>\n\t                                    <RadioGroup defaultChecked=\"鸡蛋\" name=\"radio-foot\" getValueCallback={this.getValueCallback}>\n\t                                        <Input  type=\"radio\"  label=\"大白菜\" value=\"大白菜\" />\n\t                                        <Input  type=\"radio\"  label=\"鸡蛋\" value=\"鸡蛋\" disabled={true}  />\n\t                                        <Input  type=\"radio\"  label=\"猪肉\" value=\"猪肉\" />\n\t                                        <Input  type=\"radio\"  label=\"牛肉\" value=\"牛肉\" />\n\t                                        <Input  type=\"radio\"  label=\"鱼肉\" value=\"鱼肉\" disabled={true} />\n\t                                    </RadioGroup>\n\t                                </Col>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </PanelContent>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "grid(布局)",
            "namespace": "",
            "file": "lib/Row.js",
            "line": 27,
            "description": "定义行",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Search,Select,Input,Grid,Row,Col,List,Item} from 'eagle-ui.js';\n\tlet SearchSec= class SearchSec extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t    render(){\n\t        return (\n\t            <Grid>\n\t                <Row>\n\t                    <Col sm={5}>\n\t                        <Select  callback={function(val){alert(val)}}>\n\t                            <item> 北京</item>\n\t                            <item> 上海</item>\n\t                            <item> 南京</item>\n\t                        </Select>\n\t                    </Col>\n\t                    <Col sm={5}>\n\t                        <Search placeholder='shopId/门店名称' callBack={function(val){alert(val)}}>\n\t                        </Search>\n\t                    </Col>\n\t                    <Col sm={2}>\n\t                    </Col>\n\t                </Row>\n\t            </Grid>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Search": {
            "name": "Search",
            "shortname": "Search",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Search.js",
            "line": 23,
            "description": "搜索按钮组件\n参数： id/callBack/placeholder 均可不传",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>"
            ],
            "exampleTitles": [
                "UI展示"
            ],
            "show": true
        },
        "Select": {
            "name": "Select",
            "shortname": "Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/Select.js",
            "line": 48,
            "description": "下拉选择框组件<br>支持在input框中输入文字或者点击下拉菜单中的选项进行查询",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component,PropTypes} from 'react';\n\timport querystring from 'querystring';\n\timport {Select,FormGroup,CalendarPanel,CheckboxGroup,RadioGroup,Grid,Row,Col,PanelContent,Panel,Input} from '../../../src/index.js';\n\tlet Demo= class Demo extends Component{\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            show:false\n\t        }\n\t    };\n\t    focus(){\n\t        this.setState({\n\t            show:true\n\t        });\n\t    }\n\t    blur(){\n\t        this.setState({\n\t            show:false\n\t        });\n\t    }\n\t    getValueCallback(val){\n\t        alert(val);\n\t        console.dir(val);\n\t    }\n\t    getValue(val){\n\t        alert(val);\n\t    }\n\t    change(e){\n\t        alert(e.target.value);\n\t        console.dir(e.target.value);\n\t    }\n\t    render(){\n\t\n\t        return (\n\t            <Panel>\n\t                <PanelContent>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <FormGroup>\n\t                                    <Row>\n\t                                        <Col sm={2}>所在城市</Col>\n\t                                        <Col sm={10}>\n\t                                            <Select placeholder=\"请选择城市\" >\n\t                                                <item value='bei'>北京</item>\n\t                                                <item value='shang'>上海</item>\n\t                                                <item value='nan'>南京</item>\n\t                                            </Select>\n\t                                        </Col>\n\t                                    </Row>\n\t                                </FormGroup>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </PanelContent>\n\t            </Panel>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Star": {
            "name": "Star",
            "shortname": "Star",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Star.js",
            "line": 27,
            "description": "星级评价(Star)组件<br />\n提供的UI展示属性接口包括<br/>\n<ul>\n    <li>rate：星级评价的分数(满分为100)<code>默认为0</code></li>\n    <li>size：星星的大小(默认单位为px)<code>默认13*13px</code></li>\n</ul><br>\n使用方式:\n<pre><code>&#60;Star rate={50} size={10}/&#62;</code>\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\t/**\n\t * Created by slashhuang on 15/12/21.\n\t */\n\timport React, { Component ,PropTypes} from 'react';\n\timport Star from '../../../src/Star.js';\n\texport default class StarDemo extends Component {\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Star rate={50} size={15}/><br/>\n\t                <Star rate={60} size={16}/><br/>\n\t                <Star rate={70} size={17}/><br/>\n\t                <Star rate={80} size={18}/><br/>\n\t                <Star rate={90} size={19}/><br/>\n\t                <Star rate={10} size={14}/><br/>\n\t                <Star rate={20} size={13}/><br/>\n\t                <Star rate={30} size={12}/><br/>\n\t                <Star rate={40} size={11}/><br/>\n\t                <Star rate={50} size={10}/><br/>\n\t                <Star/><br/>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Suggestion": {
            "name": "Suggestion",
            "shortname": "Suggestion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Suggestion.js",
            "line": 21,
            "description": "搜索联想组件。",
            "is_constructor": 1,
            "extends": "Component",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component,PropTypes}  from 'react';\n\timport {Suggestion , Button , Grid ,Row , Col ,Item } from 'eagle-ui.js';\n\tlet Demo= class Demo extends Component{\n\t    static defaultProps = {\n\t        input: true,\n\t        keys:'bei'\n\t    };\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            input: this.props.input\n\t        }\n\t    }\n\t    query(){\n\t        //可以返回ajax\n\t        return [\n\t            {\n\t                key:'上海',\n\t                value:'shanghai',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'北京',\n\t                value:'beijing',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'哈尔滨',\n\t                value:'haerbin',\n\t                subKey:'5010个区'\n\t            },\n\t            {\n\t                key:'南京',\n\t                value:'nanjing',\n\t                subKey:'10个区'\n\t            },\n\t            {\n\t                key:'南宁',\n\t                value:'nanning',\n\t                subKey:'120个区'\n\t            },\n\t            {\n\t                key:'天津',\n\t                value:'tianjing',\n\t                subKey:'312310个区'\n\t            },\n\t            {\n\t                key:'深圳',\n\t                value:'shenzhen',\n\t                subKey:'101个区'\n\t            }\n\t        ];\n\t    }\n\t\n\t    getValue(value,key,type){\n\t        let stype = {\n\t            'init':'加载时调用',\n\t            'enter':'回车时调用',\n\t            'click':'点击每一项元素时调用'\n\t        };\n\t        document.getElementById('showtip').innerHTML = `<strong>${stype[type]}</strong>的值为：<b>\"key\":<span class=\"color-error\">${key}</span></b>,<b>\"value\":<span class=\"color-error\">${value}</span></b>`;\n\t    }\n\t\n\t    render(){\n\t        return (\n\t            <Grid fluid>\n\t                <Row>\n\t                    <Col>\n\t                        <div id=\"showtip\" className=\"color-info\"></div>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={10} layer padding={\"0\"}>\n\t                        <Suggestion\n\t                            getValueCallback={::this.getValue}\n\t                            queryCallback={::this.query}\n\t                            icon=\"search\"\n\t                            iconDirection=\"left\"\n\t                            placeholder=\"请输入key搜索\" />\n\t                    </Col>\n\t                    <Col sm={2} end padding={\"0\"}>\n\t                        <Button type=\"submit\">查询</Button>\n\t                    </Col>\n\t                </Row>\n\t\n\t                <Row>\n\t                    <Col sm={10} layer end>\n\t                        <Row>\n\t                            <Col sm={10} end>\n\t                                <Suggestion\n\t                                    getValueCallback={::this.getValue}\n\t                                    queryCallback={::this.query}\n\t                                    icon=\"search\"\n\t                                    iconDirection=\"left\"\n\t                                    value=\"上海\"\n\t                                    placeholder=\"请输入key搜索\" />\n\t                            </Col>\n\t                        </Row>\n\t                    </Col>\n\t                </Row>\n\t                <Row>\n\t                    <Col sm={10} layer>\n\t                        <Row>\n\t                            <Col sm={10} end>\n\t                                <Suggestion\n\t                                    getValueCallback={::this.getValue}\n\t                                    icon=\"search\"\n\t                                    iconDirection=\"left\"\n\t                                    placeholder=\"请输入测、测试、试进行搜索\">\n\t                                    <Item value=\"测试测试\" subKey=\"222222\">\n\t                                        测试测试\n\t                                    </Item>\n\t                                    <Item value=\"测试\" subKey=\"达到\">\n\t                                        测试\n\t                                    </Item>\n\t                                    <Item value=\"试验\" subKey=\"dsadsad\">\n\t                                        试验\n\t                                    </Item>\n\t                                    <Item value=\"测验\">\n\t                                        测验\n\t                                    </Item>\n\t                                    <Item value=\"检测\" >\n\t                                        检测\n\t                                    </Item>\n\t                                </Suggestion>\n\t                            </Col>\n\t                        </Row>\n\t                    </Col>\n\t                    <Col sm=\"2\">请输入测、测试、试进行搜索</Col>\n\t                </Row>\n\t            </Grid>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Tab.js",
            "line": 30,
            "description": "tab组件",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Tab ,Tabset} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            tabIndex:2\n\t        };\n\t    }\n\t    callback(index){\n\t        if(this.state.tabIndex!==index){\n\t            this.setState({\n\t                tabIndex:index\n\t            });\n\t        }\n\t    }\n\t    tab3(){\n\t        if(this.state.tabIndex==2){\n\t            return (<div>tab3</div>);\n\t        }\n\t    }\n\t    tab2(){\n\t        if(this.state.tabIndex==1){\n\t            return (<div>tab2</div>);\n\t        }\n\t    }\n\t    tab1(){\n\t        if(this.state.tabIndex==0){\n\t            return (<div>tab1</div>);\n\t        }\n\t    }\n\t    render(){\n\t        return (\n\t            <Tabset activeTab={this.state.tabIndex} tabCallback={::this.callback}>\n\t                <Tab heading='tab1'>\n\t                    {::this.tab1()}\n\t                </Tab>\n\t                <Tab heading='tab2'>\n\t                    {::this.tab2()}\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    {::this.tab3()}\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    nadkfnpasknfsaknf\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    nadkfnpasknfsaknf\n\t                </Tab>\n\t            </Tabset>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Tabset": {
            "name": "Tabset",
            "shortname": "Tabset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Tabset.js",
            "line": 40,
            "description": "tab组件",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Tab ,Tabset} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            tabIndex:2\n\t        };\n\t    }\n\t    callback(index){\n\t        if(this.state.tabIndex!==index){\n\t            this.setState({\n\t                tabIndex:index\n\t            });\n\t        }\n\t    }\n\t    tab3(){\n\t        if(this.state.tabIndex==2){\n\t            return (<div>tab3</div>);\n\t        }\n\t    }\n\t    tab2(){\n\t        if(this.state.tabIndex==1){\n\t            return (<div>tab2</div>);\n\t        }\n\t    }\n\t    tab1(){\n\t        if(this.state.tabIndex==0){\n\t            return (<div>tab1</div>);\n\t        }\n\t    }\n\t    render(){\n\t        return (\n\t            <Tabset activeTab={this.state.tabIndex} tabCallback={::this.callback}>\n\t                <Tab heading='tab1'>\n\t                    {::this.tab1()}\n\t                </Tab>\n\t                <Tab heading='tab2'>\n\t                    {::this.tab2()}\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    {::this.tab3()}\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    nadkfnpasknfsaknf\n\t                </Tab>\n\t                <Tab heading='tabasjdfnl;adfnaf;adlkf3'>\n\t                    nadkfnpasknfsaknf\n\t                </Tab>\n\t            </Tabset>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Toast": {
            "name": "Toast",
            "shortname": "Toast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Toast.js",
            "line": 52,
            "description": "提示组件\n类型：分为success,error,loading 三种。默认success\noveralay是否显示遮罩，默认false不显示",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {ButtonGroup,Toast,Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo= class Demo extends Component{\n\t    static defaultProps = {\n\t        show: false,\n\t        type: \"success\"\n\t    }\n\t    constructor(props, context) {\n\t        super(props, context);\n\t        this.state = {\n\t            isMask:true\n\t        }\n\t    }\n\t    showToast(){\n\t        let msg = arguments[0].getAttribute('data-message');\n\t\n\t        this.setState({\n\t            type:arguments[0].getAttribute('data-value'),\n\t            message:msg,\n\t            isMask:msg=='无遮罩加载成功' ?false:true\n\t        });\n\t        Dialog.mask('toast');\n\t    }\n\t    render(){\n\t\n\t        return (\n\t            <Grid>\n\t                <ButtonGroup egType=\"justify\" activeCallback={::this.showToast}>\n\t                    <Button data-value=\"success\" data-message=\"数据载入成功\">显示success</Button>\n\t                    <Button data-value=\"error\"  data-message=\"数据加载失败\">显示error</Button>\n\t                    <Button data-value=\"loading\"  data-message=\"加载中...\">显示loading</Button>\n\t                    <Button data-value=\"success\"  data-message=\"无遮罩加载成功\">无遮罩toast</Button>\n\t                </ButtonGroup>\n\t\n\t                <Dialog id=\"toast\" isClose={false} isMask={this.state.isMask}>\n\t                    <Toast type={this.state.type}>{this.state.message}</Toast>\n\t                </Dialog>\n\t            </Grid>\n\t        );\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "Tooltip": {
            "name": "Tooltip",
            "shortname": "Tooltip",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/Tooltip.js",
            "line": 44,
            "description": "tips组件\n只是从tooltipPanel获得props渲染，其他操作均在tooltipPanel中",
            "moudle": "ui",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Tooltip,Button,TooltipPanel} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <div style={{width:'300px',marginBottom:'200px'}}>sadasda\n\t                    <TooltipPanel direction='top'>\n\t                        <Button radius egSize=\"sm\" egStyle=\"warning\">应在上边2</Button>\n\t                    </TooltipPanel>\n\t                </div>\n\t                <div style={{width:'300px',display: 'inline-block'}}>sadasda</div>\n\t                <TooltipPanel direction='left' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在左边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='right' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在右边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='down' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在下边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='top'>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在上边</Button>\n\t                </TooltipPanel>\n\t                <div>\n\t                    <TooltipPanel direction='left'>\n\t                        <Button radius egSize=\"sm\" egStyle=\"warning\">应在左边2</Button>\n\t                    </TooltipPanel>\n\t                    <div style={{float:'right'}}>\n\t                        <TooltipPanel direction='right'>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">应在右边2</Button>\n\t                        </TooltipPanel>\n\t                    </div>\n\t                </div>\n\t            </div>)\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "TooltipPanel": {
            "name": "TooltipPanel",
            "shortname": "TooltipPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ui",
            "namespace": "",
            "file": "lib/TooltipPanel.js",
            "line": 54,
            "description": "tipsPanel组件\n方向可选：top,down,left,right.默认down\n存在边界判断，若指定方向容纳不了提示，会转为默认",
            "moudle": "ui",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Tooltip,Button,TooltipPanel} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    render(){\n\t        return (\n\t            <div>\n\t                <div style={{width:'300px',marginBottom:'200px'}}>sadasda\n\t                    <TooltipPanel direction='top'>\n\t                        <Button radius egSize=\"sm\" egStyle=\"warning\">应在上边2</Button>\n\t                    </TooltipPanel>\n\t                </div>\n\t                <div style={{width:'300px',display: 'inline-block'}}>sadasda</div>\n\t                <TooltipPanel direction='left' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在左边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='right' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在右边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='down' style={{marginLeft:'100px'}}>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在下边</Button>\n\t                </TooltipPanel>\n\t                <TooltipPanel direction='top'>\n\t                    <Button radius egSize=\"sm\" egStyle=\"warning\">应在上边</Button>\n\t                </TooltipPanel>\n\t                <div>\n\t                    <TooltipPanel direction='left'>\n\t                        <Button radius egSize=\"sm\" egStyle=\"warning\">应在左边2</Button>\n\t                    </TooltipPanel>\n\t                    <div style={{float:'right'}}>\n\t                        <TooltipPanel direction='right'>\n\t                            <Button radius egSize=\"sm\" egStyle=\"warning\">应在右边2</Button>\n\t                        </TooltipPanel>\n\t                    </div>\n\t                </div>\n\t            </div>)\n\t    }\n\t};\n\t"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        },
        "ValidatorPanel": {
            "name": "ValidatorPanel",
            "shortname": "ValidatorPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "form(表单)",
            "namespace": "",
            "file": "lib/ValidatorPanel.js",
            "line": 31,
            "description": "表单验证组件对所有带有data-validate属性的子元素input输入框进行验证<br />\n<!--表单元素初始化值请绑定上data-field=“fieldName”,fieldName对应数据字段名称-->\nrules属性提供的规则有<br/>\n<pre>\n    required：是否必填\n    date：日期格式验证\n    number：是否是有效的号码\n    url：url规则验证\n    dateISO：日期ISO验证\n    digits：是否是数字\n    equalTo：值对比\n    minlength：最少输入\n    maxlength：最大输入\n    email：邮箱验证\n    rangelength：字符大小需在某个区间之内\n    min：输入的值需要大于等于此规则定义的值\n    max：输入的值需要小于等于此规则定义的值\n    range：一个区间取值范围\n</pre>",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\t<html lang=\"en\">\n\t</html>",
                "\timport React,{Component} from 'react';\n\timport {Tabset,Tab,CalendarPanel,ValidatorPanel,Col,Row,Grid,Button,Dialog,Panel,PanelHeader,PanelContent,PanelFooter,FormGroup,Input,RadioGroup,CheckboxGroup,Select} from 'eagle-ui.js';\n\tlet Demo = class Demo extends Component{\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.rules = {\n\t            calendar:{\n\t                required:true\n\t            },\n\t            userName:{\n\t                required:true\n\t            },\n\t            checkbox:{\n\t                required:true,\n\t                //自定义规则\n\t                isValueToNumber:{\n\t                    text:'value值不是字符串',\n\t                    rule:function(value){\n\t                        console.dir(value);\n\t                        return true;\n\t                    }\n\t                }\n\t            },\n\t            date:{\n\t                date:true\n\t            },\n\t            number:{\n\t                number:true,\n\t                digits:true\n\t            },\n\t            equalTo:{\n\t                digits:true,\n\t                equalTo:{\n\t                    params:'[name=\"number\"]'\n\t                }\n\t            },\n\t            minlength:{\n\t                minlength:{\n\t                    params:10\n\t                },\n\t                maxlength:{\n\t                    params:15\n\t                }\n\t            },\n\t            email:{\n\t                email:true\n\t            }\n\t        };\n\t        this.state={\n\t            showTab:0,\n\t            update:'uid',\n\t            show:false\n\t        };\n\t    }\n\t    submit(vals){\n\t        alert('验证成功'+JSON.stringify(vals));\n\t    }\n\t    render(){\n\t        return (\n\t            <Panel>\n\t                <Dialog id=\"demo2\" egSize=\"sm\" title=\"表单验证\">\n\t                    <Grid>\n\t                        <ValidatorPanel rules={this.rules} submitElement=\"#ssubmit\" direction=\"top\" id=\"testDialogFrom\" submitCallback={::this.submit}>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入姓名\"  name=\"userName\" data-validate />\n\t\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入有效的号码\" name=\"number\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入有效的号码\" name=\"equalTo\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"最大最小字符10-15\" name=\"minlength\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Input placeholder=\"请输入您的email\" name=\"email\" data-validate />\n\t                                </Col>\n\t                            </Row>\n\t                            <Row>\n\t                                <Col>\n\t                                    <Button radius egSize=\"xs\" id=\"ssubmit\" >点我提交表单</Button>\n\t                                </Col>\n\t                            </Row>\n\t                        </ValidatorPanel>\n\t                    </Grid>\n\t                </Dialog>\n\t            </Panel>\n\t        );\n\t    }\n\t};"
            ],
            "exampleTitles": [
                "UI展示",
                "源码"
            ],
            "show": true
        }
    },
    "classitems": [
        {
            "file": "lib/panels/Panel.js",
            "line": 92,
            "description": "标题",
            "itemtype": "property",
            "name": "heading",
            "type": "String",
            "default": "empty",
            "class": "Panel",
            "module": "panel(面板)"
        },
        {
            "file": "lib/panels/PanelContent.js",
            "line": 56,
            "description": "是否加padding",
            "itemtype": "property",
            "name": "padding",
            "type": "bool",
            "default": "true",
            "class": "PanelContent",
            "module": "panel(面板)"
        },
        {
            "file": "lib/panels/PanelFooter.js",
            "line": 56,
            "description": "是否加padding",
            "itemtype": "property",
            "name": "padding",
            "type": "bool",
            "default": "true",
            "class": "PanelFooter",
            "module": "panel(面板)"
        },
        {
            "file": "lib/sug/Search.js",
            "line": 43,
            "description": "回调方法，主要作用将value传给父级元素。默认为null",
            "itemtype": "property",
            "name": "callback",
            "type": "func",
            "default": "null",
            "class": "Column",
            "module": "panel(面板)"
        },
        {
            "file": "lib/sug/Search.js",
            "line": 50,
            "description": "样式类名前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "string",
            "class": "Column",
            "module": "panel(面板)"
        },
        {
            "file": "lib/tables/Column.js",
            "line": 52,
            "description": "表头样式(设置表头，支持JSX)",
            "itemtype": "property",
            "name": "header",
            "type": "String",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "lib/tables/Column.js",
            "line": 58,
            "description": "用来声明需要绑定数组对象中的哪一个属性",
            "itemtype": "property",
            "name": "field",
            "type": "String",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "lib/tables/Column.js",
            "line": 64,
            "description": "用来描述每个竖排单元格的展示形式",
            "itemtype": "property",
            "name": "cell",
            "type": "JSX",
            "class": "Column",
            "module": "table(表格)"
        },
        {
            "file": "lib/tables/Table.js",
            "line": 66,
            "description": "用来渲染表格的数组，可选参数，如果传入data，会更具table下的column标签绑定的属性进行渲染",
            "itemtype": "property",
            "name": "data",
            "type": "Array",
            "class": "Table",
            "module": "table(表格)"
        },
        {
            "file": "lib/tables/Tr.js",
            "line": 56,
            "description": "是否在每一行下添加分割线",
            "itemtype": "property",
            "name": "split",
            "type": "bool",
            "default": "false",
            "class": "Tr",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 16,
            "description": "给className添加前缀后返回className",
            "itemtype": "method",
            "name": "getClassName",
            "params": [
                {
                    "name": "name",
                    "description": "从该字符串中去查找",
                    "type": "String"
                },
                {
                    "name": "pre",
                    "description": "是否添加Component中定义的class前缀，默认添加",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 46,
            "description": "验证props中的样式是否符合规则",
            "itemtype": "method",
            "name": "getClassNames",
            "params": [
                {
                    "name": "props",
                    "description": "从该对象中去查找",
                    "type": "Object"
                },
                {
                    "name": "pre",
                    "description": "是否添加Component中定义的class前缀，默认添加",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 64,
            "description": "给多个className添加前缀后返回",
            "itemtype": "method",
            "name": "getClassNamesForArguments",
            "params": [
                {
                    "name": "arguments",
                    "description": "多个class参数",
                    "type": "Arguments String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 85,
            "description": "设置css类名前缀",
            "itemtype": "method",
            "name": "setPrefix",
            "params": [
                {
                    "name": "name",
                    "description": "class名字",
                    "type": "String"
                },
                {
                    "name": "pre",
                    "description": "是否添加前缀",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 108,
            "description": "检查元素是否存在样式名",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "需要检查的样式名",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 119,
            "description": "给元素增加一个样式名",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "样式名",
                    "type": "String"
                }
            ],
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/ClassNameMixin.js",
            "line": 130,
            "description": "给元素删除一个样式名",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "obj",
                    "description": "元素",
                    "type": "Object"
                },
                {
                    "name": "cls",
                    "description": "样式名",
                    "type": "String"
                }
            ],
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/MethodMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/PropertyMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/constants.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/constants.js",
            "line": 15,
            "description": "状态",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/constants.js",
            "line": 54,
            "description": "颜色",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/utils/extend.js",
            "line": 7,
            "description": "A recursive merge between two objects.",
            "params": [
                {
                    "name": "base",
                    "description": "- the object whose properties are to be overwritten. It\n                  should be either the root level or some nested level."
                },
                {
                    "name": "override",
                    "description": "- an object containing properties to be overwritten. It\n                  should have the same structure as the object object."
                }
            ],
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/Button.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Button",
            "module": "table(表格)"
        },
        {
            "file": "lib/Button.js",
            "line": 50,
            "description": "按钮尺寸,分别为xs、sm、lg",
            "itemtype": "property",
            "name": "egSize",
            "type": "String",
            "default": "sm",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 57,
            "description": "禁用",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 64,
            "description": "启用",
            "itemtype": "property",
            "name": "enable",
            "type": "Boolean",
            "default": "true",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 72,
            "description": "选中",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 79,
            "description": "圆角",
            "itemtype": "property",
            "name": "radius",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 86,
            "description": "椭圆角",
            "itemtype": "property",
            "name": "round",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 96,
            "description": "颜色[error、warning、danger、link、gray、white、success、'']",
            "itemtype": "property",
            "name": "egStyle",
            "type": "Boolean",
            "default": "''",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 103,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "btn",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 110,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "a",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/Button.js",
            "line": 117,
            "description": "块级显示",
            "itemtype": "property",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "form(表单)"
        },
        {
            "file": "lib/ButtonGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/8.",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/ButtonGroup.js",
            "line": 48,
            "description": "是否自适应宽度",
            "itemtype": "property",
            "name": "justify",
            "type": "Boolean",
            "default": "false",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/ButtonGroup.js",
            "line": 55,
            "description": "是否垂直排列",
            "itemtype": "property",
            "name": "tacked",
            "type": "Boolean",
            "default": "false",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/ButtonGroup.js",
            "line": 72,
            "description": "tacked: bool 是否垂直排列\njustify: justify 是否自适应宽度",
            "class": "ButtonGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/Calendar.js",
            "line": 71,
            "description": "起始日期",
            "itemtype": "property",
            "name": "startDate",
            "type": "String",
            "default": "empty",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 78,
            "description": "终止日期",
            "itemtype": "property",
            "name": "endDate",
            "type": "String",
            "default": "empty",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 85,
            "description": "默认选中日期",
            "itemtype": "property",
            "name": "defaultDate",
            "type": "String",
            "default": "当天",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 92,
            "description": "日期格式",
            "itemtype": "property",
            "name": "format",
            "type": "string",
            "default": "'yyyy-MM-dd'",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 99,
            "description": "选择某个具体日期后执行的回调函数",
            "itemtype": "event",
            "name": "selectCallback",
            "params": [
                {
                    "name": "date",
                    "description": "日期",
                    "type": "String"
                }
            ],
            "default": "void",
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 201,
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/Calendar.js",
            "line": 210,
            "class": "Calendar",
            "module": "ui"
        },
        {
            "file": "lib/CalendarPanel.js",
            "line": 66,
            "description": "通过传入此函数获取日期值",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "date",
                    "description": "日期",
                    "type": "String"
                }
            ],
            "class": "CalendarPanel",
            "module": "ui"
        },
        {
            "file": "lib/CheckboxGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "CheckboxGroup",
            "module": "ui"
        },
        {
            "file": "lib/Col.js",
            "line": 71,
            "description": "总宽度为100%(12份)，egSize定义宽度占比父元素(100%)的egSize/12",
            "itemtype": "property",
            "name": "egSize",
            "type": "Integer",
            "class": "Col",
            "module": "grid(布局)"
        },
        {
            "file": "lib/Col.js",
            "line": 77,
            "description": "是否是最后一列",
            "itemtype": "property",
            "name": "end",
            "type": "Boolean",
            "default": "false",
            "class": "Col",
            "module": "grid(布局)"
        },
        {
            "file": "lib/Crumb.js",
            "line": 1,
            "description": "Created by panqianjin on 15/11/3.",
            "class": "Crumb",
            "module": "grid(布局)"
        },
        {
            "file": "lib/Crumb.js",
            "line": 66,
            "description": "类名样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "sting",
            "default": "crumb",
            "class": "Crumb",
            "module": "ui"
        },
        {
            "file": "lib/Crumb.js",
            "line": 73,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "div",
            "class": "Crumb",
            "module": "ui"
        },
        {
            "file": "lib/Crumb.js",
            "line": 97,
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "",
                "type": "ReactElement"
            },
            "class": "Crumb",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 22,
            "description": "点击确认按钮后会执行此回调，默认调用Dialog.confirm会返回promise",
            "itemtype": "property",
            "name": "successCallback",
            "type": "Function",
            "default": "",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 29,
            "description": "点击取消按钮或关闭后会执行此回调，默认调用Dialog.confirm会返回promise",
            "itemtype": "property",
            "name": "cancelCallback",
            "type": "Function",
            "default": "",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 36,
            "description": "是否显示标题栏背景色",
            "itemtype": "property",
            "name": "isHeaderBackground",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 43,
            "description": "底部按钮对齐方式 center、right or left",
            "itemtype": "property",
            "name": "buttonAlign",
            "type": "String",
            "default": "center",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 50,
            "description": "是否显示标题栏",
            "itemtype": "property",
            "name": "isHeader",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 57,
            "description": "内容区域对齐方式",
            "itemtype": "property",
            "name": "contentAlign",
            "type": "String",
            "default": "center",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 64,
            "description": "是否显示遮罩层",
            "itemtype": "property",
            "name": "isMask",
            "type": "Boolean",
            "default": "true",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 71,
            "description": "内容不在content之内 mask属性",
            "itemtype": "property",
            "name": "outside",
            "type": "Boolean",
            "default": "false",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 78,
            "description": "是否显示关闭 mask常用属性",
            "itemtype": "property",
            "name": "isClose",
            "type": "Boolean",
            "default": "false",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 85,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "default": "empty",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/Dialog.js",
            "line": 92,
            "description": "底部按钮组\n例如：\n        [\n            {\n                type: 'success',\n                name: '确认',\n                callback:()=>{}\n            },\n            {\n                type:'cancel',\n                egStyle:'white',\n                name:'取消',\n                callback:()=>{}\n            },\n            {\n                egStyle:'warning',\n                name:'自定义按钮',\n                callback:()=>{alert('自定义按钮');}\n            }\n        ]",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "default": "empty",
            "class": "Dialog",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 1,
            "description": "Created by slashhuang on 15/12/28.",
            "class": "Slider",
            "module": "grid(布局)"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 337,
            "description": "slider的图片数组",
            "itemtype": "property",
            "name": "imgList",
            "type": "Array",
            "default": "图片数组(包含大图地址、描述等信息)",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 344,
            "description": "是否展示slider",
            "itemtype": "property",
            "name": "show",
            "type": "boolean",
            "default": "false(默认不展示)",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 351,
            "description": "图片信息(对应imgList中大图标题信息的key))",
            "itemtype": "property",
            "name": "urlKey",
            "type": "string",
            "default": "url",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 358,
            "description": "图片信息(对应图片信息数组对象中图片描述信息的key)",
            "itemtype": "property",
            "name": "profileKey",
            "type": "string",
            "default": "profile",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 365,
            "description": "图片描述信息(对应imgList中大图标题信息的key)",
            "itemtype": "property",
            "name": "titleKey",
            "type": "string",
            "default": "description",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 372,
            "description": "是否显示slider的图片缩略图部分",
            "itemtype": "property",
            "name": "showThumbnail",
            "type": "boolean",
            "default": "true",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 379,
            "description": "缩略图的key",
            "itemtype": "property",
            "name": "thumbnailKey",
            "type": "array",
            "default": "默认和urlKey保持一致",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/ImgSlider.js",
            "line": 386,
            "description": "缩略图展示数目",
            "itemtype": "property",
            "name": "pageNum",
            "type": "number",
            "default": "5",
            "class": "Slider",
            "module": "ui"
        },
        {
            "file": "lib/Input.js",
            "line": 70,
            "description": "生成不同的元素标签",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 76,
            "description": "默认输入提示",
            "itemtype": "property",
            "name": "autoComplete",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 82,
            "description": "type为radio或checkbox时，需要显示的标签信息",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 88,
            "description": "需要显示的icon",
            "itemtype": "property",
            "name": "icon",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 93,
            "description": "给icon设置样式",
            "itemtype": "property",
            "name": "iconStyle",
            "type": "Object",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 99,
            "description": "icon,input类型只能是text这种的",
            "itemtype": "property",
            "name": "icon",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Input.js",
            "line": 105,
            "description": "icon展示的方向，{left,right}",
            "itemtype": "property",
            "name": "iconDirection",
            "type": "String",
            "class": "Input",
            "module": "form(表单)"
        },
        {
            "file": "lib/Label.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Label",
            "module": "form(表单)"
        },
        {
            "file": "lib/Label.js",
            "line": 66,
            "description": "点击回调函数",
            "class": "Label",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 57,
            "description": "左侧总标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 63,
            "description": "标签展现形式{form|simple|default}",
            "itemtype": "property",
            "name": "egType",
            "type": "String",
            "default": "default",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 70,
            "description": "点击后触发的回调，所有label会被继承",
            "itemtype": "property",
            "name": "activeCallback",
            "type": "Function",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 76,
            "description": "默认选中的项",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "String Integer",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/LabelGroup.js",
            "line": 82,
            "description": "间距，label集合与左边title的间距",
            "itemtype": "property",
            "name": "spacing",
            "type": "Integer",
            "class": "LabelGroup",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 44,
            "description": "总页数",
            "itemtype": "property",
            "name": "currentPage",
            "type": "Integer",
            "default": "1",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 51,
            "description": "每页显示多少条数据",
            "itemtype": "property",
            "name": "pageSize",
            "type": "Integer",
            "default": "20",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 58,
            "description": "数据总数",
            "itemtype": "property",
            "name": "total",
            "type": "Integer",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 64,
            "description": "点击分页回调",
            "itemtype": "property",
            "name": "pageCallback",
            "type": "Function",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 70,
            "itemtype": "property",
            "name": "activeClass",
            "type": "String",
            "default": "active",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 79,
            "description": "开启选择每页显示数量选项",
            "itemtype": "property",
            "name": "showItemsNumber",
            "type": "Boolean",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 95,
            "description": "跟showItemsNumber一起使用 arguments{pageSize}",
            "itemtype": "property",
            "name": "loadPageCallback",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 104,
            "is_constructor": 1,
            "params": [
                {
                    "name": "props",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 117,
            "type": "Integer",
            "default": "",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 127,
            "type": "Boolean",
            "default": "false",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 135,
            "description": "当前页",
            "type": "Integer",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 144,
            "description": "上一页",
            "itemtype": "method",
            "name": "prev",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 153,
            "description": "下一页",
            "itemtype": "method",
            "name": "prev",
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 162,
            "description": "获取页大小",
            "itemtype": "method",
            "name": "getPages",
            "return": {
                "description": "",
                "type": "Integer"
            },
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 172,
            "description": "跳转至N页",
            "itemtype": "method",
            "name": "goto",
            "params": [
                {
                    "name": "page",
                    "description": "页码，从1开始",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 201,
            "description": "跳转至N页",
            "itemtype": "method",
            "name": "gotoPage",
            "params": [
                {
                    "name": "index",
                    "description": "页码，从1开始",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 214,
            "description": "生成页码",
            "itemtype": "method",
            "name": "generate",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/Paging.js",
            "line": 338,
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "",
                "type": "ReactElement"
            },
            "class": "Paging",
            "module": "ui"
        },
        {
            "file": "lib/RadioGroup.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "RadioGroup",
            "module": "ui"
        },
        {
            "file": "lib/RadioGroup.js",
            "line": 54,
            "description": "radio name",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/RadioGroup.js",
            "line": 60,
            "description": "默认选中项",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "String",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/RadioGroup.js",
            "line": 66,
            "description": "获取选中的值",
            "itemtype": "property",
            "name": "getValueCallback",
            "type": "String",
            "class": "RadioGroup",
            "module": "form(表单)"
        },
        {
            "file": "lib/Row.js",
            "line": 59,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "row",
            "class": "Row",
            "module": "grid(布局)"
        },
        {
            "file": "lib/Row.js",
            "line": 66,
            "description": "是否显示下划线",
            "itemtype": "property",
            "name": "bottom",
            "type": "boolean",
            "default": "undefined",
            "class": "Row",
            "module": "grid(布局)"
        },
        {
            "file": "lib/Select.js",
            "line": 1,
            "description": "Created by panqianjin on 15/11/12.",
            "class": "Select",
            "module": "ui"
        },
        {
            "file": "lib/Select.js",
            "line": 65,
            "description": "回调方法，主要作用将value传给父级元素。默认为null",
            "itemtype": "event",
            "name": "getValueCallback",
            "params": [
                {
                    "name": "value",
                    "description": "值",
                    "type": "Primitive/pointer"
                },
                {
                    "name": "key",
                    "description": "键",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "类型",
                    "type": "String"
                }
            ],
            "default": "null",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "lib/Select.js",
            "line": 74,
            "description": "样式类名前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "string",
            "class": "Select",
            "module": "form(表单)"
        },
        {
            "file": "lib/Star.js",
            "line": 52,
            "description": "星级评价分数(满分100)",
            "itemtype": "property",
            "name": "Rate",
            "type": "number",
            "default": "0",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "lib/Star.js",
            "line": 59,
            "description": "星星大小",
            "itemtype": "property",
            "name": "size",
            "type": "String||number",
            "default": "13  可以取值10-20 默认单位为'px'",
            "class": "Star",
            "module": "ui"
        },
        {
            "file": "lib/Suggestion.js",
            "line": 65,
            "description": "回调方法，主要作用将value传给父级元素。默认为null",
            "itemtype": "property",
            "name": "callback",
            "type": "func",
            "default": "null",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "lib/Suggestion.js",
            "line": 72,
            "description": "样式类名前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "string",
            "class": "Suggestion",
            "module": "ui"
        },
        {
            "file": "lib/Tab.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Tab",
            "module": "ui"
        },
        {
            "file": "lib/Tabset.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Tabset",
            "module": "ui"
        },
        {
            "file": "lib/Tabset.js",
            "line": 65,
            "description": "需要在初始的时候打开第几个tab，默认为0（从0计数，即打开第一个tab）",
            "itemtype": "property",
            "name": "activeTab",
            "type": "Number",
            "default": "0",
            "class": "Tabset",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 1,
            "description": "Created by panqianjin on 15/10/30.",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 71,
            "description": "toast类型：分为success,error,loading 三种。默认success",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "success",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 78,
            "description": "文字信息",
            "itemtype": "property",
            "name": "message",
            "type": "String",
            "default": "保存成功",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 85,
            "description": "tips n秒后消失 默认2秒",
            "itemtype": "property",
            "name": "seconds",
            "type": "Integer",
            "default": "2",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 92,
            "description": "类名样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "sting",
            "default": "crumb",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 99,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "div",
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Toast.js",
            "line": 127,
            "description": "改变state.show 隐藏tips,并调用回调方法",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "null"
            },
            "class": "Toast",
            "module": "ui"
        },
        {
            "file": "lib/Tooltip.js",
            "line": 1,
            "description": "Created by panqianjin on 15/11/17.",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "lib/Tooltip.js",
            "line": 61,
            "description": "提示是否展示",
            "itemtype": "property",
            "name": "show",
            "type": "Boolean",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "lib/Tooltip.js",
            "line": 68,
            "description": "提示内容",
            "itemtype": "property",
            "name": "msg",
            "type": "String",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "lib/Tooltip.js",
            "line": 75,
            "description": "提示方向",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "null",
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "lib/Tooltip.js",
            "line": 98,
            "description": "接收到新props时执行,state.show变为nextProps.show\n接收到新props时执行,state.show变为nextProps.show\n实现隐藏与显示",
            "itemtype": "method",
            "name": "componentWillReceiveProps",
            "return": {
                "description": "null"
            },
            "class": "Tooltip",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 1,
            "description": "Created by panqianjin on 15/11/17.",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 72,
            "description": "提示是否展示",
            "itemtype": "property",
            "name": "show",
            "type": "Boolean",
            "default": "false",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 79,
            "description": "提示内容",
            "itemtype": "property",
            "name": "msg",
            "type": "String",
            "default": "这是个提示",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 86,
            "description": "提示方向",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "down",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 114,
            "description": "显示与否由父组件控制",
            "type": "Boolean",
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 122,
            "description": "渲染完成时进行方向和边界判断，调整tips的位置",
            "itemtype": "method",
            "name": "componentDidMount",
            "return": {
                "description": "null"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 132,
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "ReactElement"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 152,
            "description": "鼠标over，set show true,tips显示",
            "itemtype": "method",
            "name": "showTips",
            "return": {
                "description": "null"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 164,
            "description": "鼠标leave，set show false, tips隐藏",
            "itemtype": "method",
            "name": "hideTips",
            "return": {
                "description": "null"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 176,
            "description": "tips方向和边界判断，调整tips的位置",
            "itemtype": "method",
            "name": "changeStyle",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "null"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 240,
            "description": "获得浏览器的边界大小",
            "itemtype": "method",
            "name": "getMaxBody",
            "params": [
                {
                    "name": "body",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "doc",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "maxBody",
                "type": "Object"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/TooltipPanel.js",
            "line": 257,
            "description": "判断是否满足边界条件,是返回true否返回false",
            "itemtype": "method",
            "name": "isValidate",
            "params": [
                {
                    "name": "dir",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "tips",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "ele",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "maxBody",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "flag",
                "type": "Boolean"
            },
            "class": "TooltipPanel",
            "module": "ui"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 69,
            "description": "需要初始化的表单元素默认值(废弃)",
            "itemtype": "property",
            "name": "values",
            "type": "Object",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 75,
            "description": "每次验证时值被改变后都会被触发，会回传当前data-field字段、值和所有值对象",
            "itemtype": "property",
            "name": "getValueCallback",
            "type": "Function",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 86,
            "description": "包装容器",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "form",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 93,
            "description": "触发验证的事件集合",
            "itemtype": "property",
            "name": "trigger",
            "type": "String",
            "default": "blur keyup focus click",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 100,
            "description": "默认规则提示文案",
            "itemtype": "property",
            "name": "message",
            "type": "Object",
            "default": "required: '不能为空',\n                    date: '请正确填写日期',\n                    number: '请输入一个有效的号码',\n                    url: '请输入一个有效的URL',\n                    email: '请输入一个有效的电子邮件地址',\n                    dateISO: '请输入一个有效的日期(ISO)',\n                    digits: '请输入数字',\n                    equalTo:'请再次输入相同的值。',\n                    minlength: '请输入至少{0}字符',\n                    maxlength: '请输入不超过{0}字符',\n                    rangelength: '请输入一个值{0}和{1}字符之间',\n                    min: '请输入一个值大于或等于{0}',\n                    max: '请输入一个值小于或等于{0}',\n                    range: '请输入一个值{0} - {1}'",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 137,
            "description": "自定义在提交后的callback",
            "itemtype": "event",
            "name": "submitCallback",
            "params": [
                {
                    "name": "opt",
                    "description": "表单数据结构",
                    "type": "Object"
                }
            ],
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 145,
            "description": "自定义验证规则之外的其他逻辑",
            "itemtype": "event",
            "name": "validateCallback",
            "params": [
                {
                    "name": "opt",
                    "description": "表单数据结构",
                    "type": "Object"
                }
            ],
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 153,
            "description": "提示框消失时间",
            "itemtype": "property",
            "name": "timeout",
            "type": "Number",
            "default": "3000",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 160,
            "description": "提交按钮id",
            "itemtype": "property",
            "name": "submitElement",
            "type": "String",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 166,
            "description": "是否增强文本框提示",
            "itemtype": "property",
            "name": "shake",
            "type": "Boolean",
            "default": "true",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 173,
            "description": "规则验证",
            "itemtype": "property",
            "name": "rules",
            "type": "Object",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 179,
            "description": "提示方位",
            "itemtype": "property",
            "name": "direction",
            "type": "String",
            "default": "right",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        },
        {
            "file": "lib/ValidatorPanel.js",
            "line": 186,
            "description": "重新更新dom",
            "itemtype": "property",
            "name": "update",
            "type": "String",
            "default": "+new Date()",
            "class": "ValidatorPanel",
            "module": "form(表单)"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/Panel.js:42"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/Panel.js:42"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/panels/Panel.js:42"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelContent.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelContent.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/panels/PanelContent.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelFooter.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelFooter.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/panels/PanelFooter.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelHeader.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/panels/PanelHeader.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/panels/PanelHeader.js:25"
        },
        {
            "message": "unknown tag: content",
            "line": " lib/tables/Column.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Column.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Column.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/tables/Column.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Table.js:49"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Table.js:49"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/tables/Table.js:49"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Td.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Td.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/tables/Td.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Th.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Th.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/tables/Th.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Tr.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/tables/Tr.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/tables/Tr.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Button.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Button.js:30"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Button.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ButtonGroup.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ButtonGroup.js:30"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/ButtonGroup.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Calendar.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Calendar.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Calendar.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/CalendarPanel.js:39"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/CalendarPanel.js:39"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/CalendarPanel.js:39"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/CheckboxGroup.js:32"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/CheckboxGroup.js:32"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/CheckboxGroup.js:32"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Col.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Col.js:27"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Col.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Crumb.js:49"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Crumb.js:49"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Crumb.js:49"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Dialog.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Dialog.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Dialog.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Grid.js:39"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Grid.js:39"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Grid.js:39"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ImgSlider.js:31"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ImgSlider.js:31"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/ImgSlider.js:31"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Input.js:46"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Input.js:46"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Input.js:46"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Label.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Label.js:30"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Label.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/LabelGroup.js:40"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/LabelGroup.js:40"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/LabelGroup.js:40"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Paging.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Paging.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Paging.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/RadioGroup.js:36"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/RadioGroup.js:36"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/RadioGroup.js:36"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Row.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Row.js:27"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Row.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Search.js:23"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Search.js:23"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Search.js:23"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Select.js:48"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Select.js:48"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Select.js:48"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Star.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Star.js:27"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Star.js:27"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Suggestion.js:21"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Suggestion.js:21"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Suggestion.js:21"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tab.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tab.js:30"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Tab.js:30"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tabset.js:40"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tabset.js:40"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Tabset.js:40"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Toast.js:52"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Toast.js:52"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Toast.js:52"
        },
        {
            "message": "unknown tag: moudle",
            "line": " lib/Tooltip.js:44"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tooltip.js:44"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/Tooltip.js:44"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/Tooltip.js:44"
        },
        {
            "message": "unknown tag: moudle",
            "line": " lib/TooltipPanel.js:54"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/TooltipPanel.js:54"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/TooltipPanel.js:54"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/TooltipPanel.js:54"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ValidatorPanel.js:31"
        },
        {
            "message": "unknown tag: demo",
            "line": " lib/ValidatorPanel.js:31"
        },
        {
            "message": "unknown tag: show",
            "line": " lib/ValidatorPanel.js:31"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/utils/ClassNameMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " lib/utils/MethodMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " lib/utils/PropertyMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/utils/constants.js:1"
        },
        {
            "message": "Missing item type\n状态",
            "line": " lib/utils/constants.js:15"
        },
        {
            "message": "Missing item type\n颜色",
            "line": " lib/utils/constants.js:54"
        },
        {
            "message": "Missing item type\nA recursive merge between two objects.",
            "line": " lib/utils/extend.js:7"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/Button.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/8.",
            "line": " lib/ButtonGroup.js:1"
        },
        {
            "message": "Missing item type\ntacked: bool 是否垂直排列\njustify: justify 是否自适应宽度",
            "line": " lib/ButtonGroup.js:72"
        },
        {
            "message": "Missing item type",
            "line": " lib/Calendar.js:201"
        },
        {
            "message": "Missing item type",
            "line": " lib/Calendar.js:210"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/CheckboxGroup.js:1"
        },
        {
            "message": "Missing item type\nCreated by panqianjin on 15/11/3.",
            "line": " lib/Crumb.js:1"
        },
        {
            "message": "Missing item type\nCreated by slashhuang on 15/12/28.",
            "line": " lib/ImgSlider.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/Label.js:1"
        },
        {
            "message": "Missing item type\n点击回调函数",
            "line": " lib/Label.js:66"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/LabelGroup.js:1"
        },
        {
            "message": "Missing item type",
            "line": " lib/Paging.js:104"
        },
        {
            "message": "Missing item type",
            "line": " lib/Paging.js:117"
        },
        {
            "message": "Missing item type",
            "line": " lib/Paging.js:127"
        },
        {
            "message": "Missing item type\n当前页",
            "line": " lib/Paging.js:135"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/RadioGroup.js:1"
        },
        {
            "message": "Missing item type\nCreated by panqianjin on 15/11/12.",
            "line": " lib/Select.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/Tab.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " lib/Tabset.js:1"
        },
        {
            "message": "Missing item type\nCreated by panqianjin on 15/10/30.",
            "line": " lib/Toast.js:1"
        },
        {
            "message": "Missing item type\nCreated by panqianjin on 15/11/17.",
            "line": " lib/Tooltip.js:1"
        },
        {
            "message": "Missing item type\nCreated by panqianjin on 15/11/17.",
            "line": " lib/TooltipPanel.js:1"
        },
        {
            "message": "Missing item type\n显示与否由父组件控制",
            "line": " lib/TooltipPanel.js:114"
        }
    ]
}